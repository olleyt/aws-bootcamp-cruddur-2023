image:
  file: .gitpod.dockerfile

# copied from GitPodify guide: https://www.gitpod.io/guides/gitpodify#accelerating-startup-with-prebuilt-workspaces
github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: false
# enable for all branches in this repo (defaults to false)
    branches: false
# enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
# add a check to pull requests (defaults to true)
    addCheck: true
# add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: false

tasks:
  - name: AWS_CLI_backend
    env:
      AWS_CLI_AUTO_PROMPT: on-partial
    before: |
      bash bin/ecr/login
      ruby "$THEIA_WORKSPACE_ROOT/bin/backend/generate-env"
      # install Python libraries for Flask backend app on local GitPod environment
      cd $THEIA_WORKSPACE_ROOT/backend-flask
      pip3 install -r requirements.txt
  - name: frontend
    before: |    
      # install npm libraries for frontend on local GitPod environment
      ruby "$THEIA_WORKSPACE_ROOT/bin/frontend/generate-env"
      cd $THEIA_WORKSPACE_ROOT/frontend-react-js
      npm i
      npm i aws-amplify --save
      cd $THEIA_WORKSPACE_ROOT 
  - name: postgres
    before: |
      curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
      echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
      sudo apt update
      sudo apt install -y postgresql-client-13 libpq-dev
    command: |
      export GITPOD_IP=$(curl ifconfig.me)
      source "$THEIA_WORKSPACE_ROOT/bin/rds/update-sg-rule"
  - name: fargate
    before: |
      cd /workspace
      curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
      sudo dpkg -i session-manager-plugin.deb
      cd $THEIA_WORKSPACE_ROOT
      cd backend-flask      
  - name: cdk
    before: |
      npm install aws-cdk -g
      cd thumbing-serverless-cdk
      cp .env.example .env
      npm i
vscode:
  extensions:
    - 42Crunch.vscode-openapi
    - ms-azuretools.vscode-docker
    - cweijan.vscode-postgresql-client2

    - dendron.dendron-markdown-preview-enhanced

ports:
  - name: frontend
    port: 3000
    onOpen: open-browser
    visibility: public
  - name: backend
    port: 4567
    visibility: public
  - name: xray-daemon
    port: 2000
    visibility: public
